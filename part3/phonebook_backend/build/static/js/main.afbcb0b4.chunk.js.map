{"version":3,"sources":["components/Filter.js","components/PersonForm.js","components/Person.js","components/Notification.js","services/phones.js","App.js","index.js"],"names":["Filter","filter","onFilterChange","value","onChange","PersonForm","newName","newNumber","handleNameChange","handleNumberChange","handleSubmit","onSubmit","placeholder","type","Person","person","handleDlete","className","name","number","onClick","Notification","message","baseUrl","phoneService","getAll","axios","get","create","newObject","post","update","id","put","remove","delete","App","useState","persons","setPersons","setNewName","setNewNumber","filterName","setFilterName","notification","setNotification","useEffect","then","response","data","catch","error","console","log","event","target","preventDefault","newPerson","existingPerson","find","window","confirm","map","setTimeout","concat","toLowerCase","includes","ReactDOM","render","document","getElementById"],"mappings":"6KAUeA,EARA,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,OAAQC,EAAqB,EAArBA,eACxB,OACE,sDACqB,uBAAOC,MAAOF,EAAQG,SAAUF,QCyB1CG,EA5BI,SAAC,GAMb,IALLC,EAKI,EALJA,QACAC,EAII,EAJJA,UACAC,EAGI,EAHJA,iBACAC,EAEI,EAFJA,mBACAC,EACI,EADJA,aAEA,OACE,uBAAMC,SAAUD,EAAhB,UACE,wCACQ,IACN,uBAAOP,MAAOG,EAASF,SAAUI,EAAkBI,YAAY,YAEjE,0CACU,IACR,uBACET,MAAOI,EACPH,SAAUK,EACVG,YAAY,cAGhB,8BACE,wBAAQC,KAAK,SAAb,uBCbOC,EATA,SAAC,GAA6B,IAA3BC,EAA0B,EAA1BA,OAAQC,EAAkB,EAAlBA,YACxB,OACE,qBAAsBC,UAAU,SAAhC,UACGF,EAAOG,KADV,IACiBH,EAAOI,OACtB,wBAAQC,QAASJ,EAAjB,sBAFOD,EAAOG,OCMLG,EARM,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,QAAST,EAAW,EAAXA,KAC/B,OAAgB,OAAZS,EACK,KAGF,qBAAKL,UAAWJ,EAAhB,SAAuBS,K,gBCL1BC,EAAU,eAmBDC,EADM,CAAEC,OAhBR,WACb,OAAOC,IAAMC,IAAIJ,IAeYK,OAZhB,SAACC,GACd,OAAOH,IAAMI,KAAKP,EAASM,IAWUE,OARxB,SAACC,EAAIH,GAClB,OAAOH,IAAMO,IAAN,UAAaV,EAAb,YAAwBS,GAAMH,IAOQK,OAJhC,SAACF,GACd,OAAON,IAAMS,OAAN,UAAgBZ,EAAhB,YAA2BS,MC4HrBI,EAtIH,WAAO,IAAD,EACcC,mBAAS,CACrC,CAAEnB,KAAM,cAAeC,OAAQ,aAAca,GAAI,GACjD,CAAEd,KAAM,eAAgBC,OAAQ,gBAAiBa,GAAI,GACrD,CAAEd,KAAM,cAAeC,OAAQ,eAAgBa,GAAI,GACnD,CAAEd,KAAM,mBAAoBC,OAAQ,gBAAiBa,GAAI,KAL3C,mBACTM,EADS,KACAC,EADA,OAOcF,mBAAS,IAPvB,mBAOT/B,EAPS,KAOAkC,EAPA,OAQkBH,mBAAS,IAR3B,mBAQT9B,EARS,KAQEkC,EARF,OASoBJ,mBAAS,IAT7B,mBASTK,EATS,KASGC,EATH,OAUwBN,mBAAS,CAC/Cf,QAAS,KACTT,KAAM,YAZQ,mBAUT+B,EAVS,KAUKC,EAVL,KAehBC,qBAAU,WACRtB,EACGC,SACAsB,MAAK,SAACC,GACLT,EAAWS,EAASC,SAErBC,OAAM,SAACC,GACNC,QAAQC,IAAIF,QAEf,IAiFH,OACE,gCACE,2CACA,cAAC,EAAD,CAAc7B,QAASsB,EAAatB,QAAST,KAAM+B,EAAa/B,OAChE,cAAC,EAAD,CAAQZ,OAAQyC,EAAYxC,eAxBL,SAACoD,GAC1BX,EAAcW,EAAMC,OAAOpD,UAwBzB,2CACA,cAAC,EAAD,CACEG,QAASA,EACTC,UAAWA,EACXC,iBApCmB,SAAC8C,GACxBd,EAAWc,EAAMC,OAAOpD,QAoCpBM,mBAjCqB,SAAC6C,GAC1Bb,EAAaa,EAAMC,OAAOpD,QAiCtBO,aA1Fe,SAAC4C,GACpBA,EAAME,iBACN,IAAMC,EAAY,CAChBvC,KAAMZ,EACNa,OAAQZ,GAEJmD,EAAiBpB,EAAQqB,MAAK,SAAC5C,GAAD,OAAYA,EAAOG,OAASZ,KAEhE,GAAIoD,GACF,GACEE,OAAOC,QAAP,UACKvD,EADL,2EAGA,CACA,IAAM0B,EAAK0B,EAAe1B,GAC1BR,EACGO,OAAOC,EAAIyB,GACXV,MAAK,SAACC,GACLT,EACED,EAAQwB,KAAI,SAAC/C,GAAD,OACVA,EAAOiB,KAAOA,EAAKjB,EAASiC,EAASC,SAGzCJ,EAAgB,CAAEvB,QAAQ,SAAD,OAAWhB,KACpCyD,YAAW,WACTlB,EAAgB,CAAEvB,QAAS,SAC1B,QAEJ4B,OAAM,SAACC,GACNN,EAAgB,CACdvB,QAAQ,kBAAD,OAAoBhB,EAApB,yCACPO,KAAM,mBAKdW,EACGI,OAAO6B,GACPV,MAAK,SAACC,GACLT,EAAWD,EAAQ0B,OAAOhB,EAASC,UAEpCC,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAEhBN,EAAgB,CAAEvB,QAAQ,SAAD,OAAWhB,KACpCyD,YAAW,WACTlB,EAAgB,CAAEvB,QAAS,SAC1B,KAELkB,EAAW,IACXC,EAAa,OA0CX,yCACCH,EACErC,QAAO,SAACc,GAAD,OACNA,EAAOG,KAAK+C,cAAcC,SAASxB,EAAWuB,kBAE/CH,KAAI,SAAC/C,GAAD,OACH,cAAC,EAAD,CAEEA,OAAQA,EACRC,YAAa,kBAtCH,SAACgB,GACnB,IAAMjB,EAASuB,EAAQqB,MAAK,SAAC5C,GAAD,OAAYA,EAAOiB,KAAOA,KACtDoB,QAAQC,IAAItC,GACR6C,OAAOC,QAAP,iBAAyB9C,EAAOG,KAAhC,QACFqB,EAAWD,EAAQrC,QAAO,SAACc,GAAD,OAAYA,EAAOiB,KAAOA,MACpDR,EACGU,OAAOF,GACPe,MAAK,SAACC,GACLI,QAAQC,IAAIL,MAEbE,OAAM,SAACC,GACNC,QAAQC,IAAIF,OA2BSnC,CAAYD,EAAOiB,MAFjCjB,EAAOiB,W,MChIxBmC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.afbcb0b4.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Filter = ({ filter, onFilterChange }) => {\n  return (\n    <div>\n      filter shown with: <input value={filter} onChange={onFilterChange} />\n    </div>\n  );\n};\n\nexport default Filter;\n","import React from \"react\";\n\nconst PersonForm = ({\n  newName,\n  newNumber,\n  handleNameChange,\n  handleNumberChange,\n  handleSubmit,\n}) => {\n  return (\n    <form onSubmit={handleSubmit}>\n      <div>\n        name:{\" \"}\n        <input value={newName} onChange={handleNameChange} placeholder=\"name\" />\n      </div>\n      <div>\n        number:{\" \"}\n        <input\n          value={newNumber}\n          onChange={handleNumberChange}\n          placeholder=\"number\"\n        />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default PersonForm;\n","import React from \"react\";\n\nconst Person = ({ person, handleDlete }) => {\n  return (\n    <li key={person.name} className='person'>\n      {person.name} {person.number}\n      <button onClick={handleDlete}>delete</button>\n    </li>\n  );\n};\n\nexport default Person;\n","import React from \"react\";\n\nconst Notification = ({ message, type }) => {\n  if (message === null) {\n    return null;\n  }\n\n  return <div className={type}>{message}</div>;\n};\n\nexport default Notification;\n","import axios from \"axios\";\n\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => {\n  return axios.get(baseUrl);\n};\n\nconst create = (newObject) => {\n  return axios.post(baseUrl, newObject);\n};\n\nconst update = (id, newObject) => {\n  return axios.put(`${baseUrl}/${id}`, newObject);\n};\n\nconst remove = (id) => {\n  return axios.delete(`${baseUrl}/${id}`);\n};\n\nconst phoneService = { getAll, create, update, remove };\nexport default phoneService;\n","import React, { useState, useEffect } from \"react\";\nimport Filter from \"./components/Filter\";\nimport PersonForm from \"./components/PersonForm\";\nimport Person from \"./components/Person\";\nimport Notification from \"./components/Notification\";\nimport phoneService from \"./services/phones\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([\n    { name: \"Arto Hellas\", number: \"040-123456\", id: 1 },\n    { name: \"Ada Lovelace\", number: \"39-44-5323523\", id: 2 },\n    { name: \"Dan Abramov\", number: \"12-43-234345\", id: 3 },\n    { name: \"Mary Poppendieck\", number: \"39-23-6423122\", id: 4 },\n  ]);\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const [filterName, setFilterName] = useState(\"\");\n  const [notification, setNotification] = useState({\n    message: null,\n    type: \"success\",\n  });\n\n  useEffect(() => {\n    phoneService\n      .getAll()\n      .then((response) => {\n        setPersons(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    const newPerson = {\n      name: newName,\n      number: newNumber,\n    };\n    const existingPerson = persons.find((person) => person.name === newName);\n\n    if (existingPerson) {\n      if (\n        window.confirm(\n          `${newName} is already added to phonebook, replace the old number with a new one?`\n        )\n      ) {\n        const id = existingPerson.id;\n        phoneService\n          .update(id, newPerson)\n          .then((response) => {\n            setPersons(\n              persons.map((person) =>\n                person.id !== id ? person : response.data\n              )\n            );\n            setNotification({ message: `Added ${newName}` });\n            setTimeout(() => {\n              setNotification({ message: null });\n            }, 5000);\n          })\n          .catch((error) => {\n            setNotification({\n              message: `Information of ${newName} has already been removed from server`,\n              type: \"error\",\n            });\n          });\n      }\n    } else {\n      phoneService\n        .create(newPerson)\n        .then((response) => {\n          setPersons(persons.concat(response.data));\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n      setNotification({ message: `Added ${newName}` });\n      setTimeout(() => {\n        setNotification({ message: null });\n      }, 5000);\n    }\n    setNewName(\"\");\n    setNewNumber(\"\");\n  };\n  const handleNameChange = (event) => {\n    setNewName(event.target.value);\n  };\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value);\n  };\n  const handleFilterChange = (event) => {\n    setFilterName(event.target.value);\n  };\n\n  const handleDlete = (id) => {\n    const person = persons.find((person) => person.id === id);\n    console.log(person);\n    if (window.confirm(`Delete ${person.name}?`)) {\n      setPersons(persons.filter((person) => person.id !== id));\n      phoneService\n        .remove(id)\n        .then((response) => {\n          console.log(response);\n        })\n        .catch((error) => {\n          console.log(error);\n        });\n    }\n  };\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification message={notification.message} type={notification.type} />\n      <Filter filter={filterName} onFilterChange={handleFilterChange} />\n      <h3>add a new</h3>\n      <PersonForm\n        newName={newName}\n        newNumber={newNumber}\n        handleNameChange={handleNameChange}\n        handleNumberChange={handleNumberChange}\n        handleSubmit={handleSubmit}\n      />\n      <h3>Numbers</h3>\n      {persons\n        .filter((person) =>\n          person.name.toLowerCase().includes(filterName.toLowerCase())\n        )\n        .map((person) => (\n          <Person\n            key={person.id}\n            person={person}\n            handleDlete={() => handleDlete(person.id)}\n          />\n        ))}\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}