{"version":3,"sources":["components/Note.js","services/notes.js","App.js","index.js"],"names":["Note","note","toggleImportance","label","important","content","onClick","baseUrl","noteService","getAll","axios","get","create","newObject","post","update","id","put","remove","delete","App","useState","notes","setNotes","newNote","setNewNote","showAll","setShowAll","useEffect","then","response","data","catch","error","console","log","notesToShow","filter","map","find","changedNote","onSubmit","event","preventDefault","target","noteObject","date","Date","toISOString","Math","random","concat","value","onChange","type","ReactDOM","render","document","getElementById"],"mappings":"uJAaeA,EAXF,SAAC,GAAgC,IAA9BC,EAA6B,EAA7BA,KAAMC,EAAuB,EAAvBA,iBACdC,EAAQF,EAAKG,UAAY,qBAAuB,iBAEtD,OACE,+BACGH,EAAKI,QACN,wBAAQC,QAASJ,EAAjB,SAAoCC,Q,gBCNpCI,EAAU,aAmBDC,EADK,CAAEC,OAhBP,WACb,OAAOC,IAAMC,IAAIJ,IAeWK,OAZf,SAACC,GACd,OAAOH,IAAMI,KAAKP,EAASM,IAWSE,OARvB,SAACC,EAAIH,GAClB,OAAOH,IAAMO,IAAN,UAAaV,EAAb,YAAwBS,GAAMH,IAOOK,OAJ/B,SAACF,GACd,OAAON,IAAMS,OAAN,UAAgBZ,EAAhB,YAA2BS,MCwErBI,EArFH,WAAO,IAAD,EACUC,mBAAS,IADnB,mBACTC,EADS,KACFC,EADE,OAEcF,mBAAS,iBAFvB,mBAETG,EAFS,KAEAC,EAFA,OAGcJ,oBAAS,GAHvB,mBAGTK,EAHS,KAGAC,EAHA,KAKhBC,qBAAU,WACRpB,EACGC,SACAoB,MAAK,SAACC,GACLP,EAASO,EAASC,SAEnBC,OAAM,SAACC,GACNC,QAAQC,IAAIF,QAEf,IAEH,IA0CMG,EAAcV,EAAUJ,EAAQA,EAAMe,QAAO,SAACpC,GAAD,OAAUA,EAAKG,aAElE,OACE,gCACE,uCACA,8BACE,yBAAQE,QAAS,kBAAMqB,GAAYD,IAAnC,kBACQA,EAAU,YAAc,WAGlC,6BACGU,EAAYE,KAAI,SAACrC,GAAD,OACf,cAAC,EAAD,CAEEA,KAAMA,EACNC,iBAAkB,kBAjCH,SAACc,GACxBkB,QAAQC,IAAI,OAAQb,GACpB,IAAMrB,EAAOqB,EAAMiB,MAAK,SAACtC,GAAD,OAAUA,EAAKe,KAAOA,KAC9CkB,QAAQC,IAAI,OAAQlC,GACpB,IAAMuC,EAAW,2BAAQvC,GAAR,IAAcG,WAAYH,EAAKG,YAChD8B,QAAQC,IAAI,cAAeK,GAC3BhC,EACGO,OAAOC,EAAIwB,GACXX,MAAK,SAACC,GACLP,EAASD,EAAMgB,KAAI,SAACrC,GAAD,OAAWA,EAAKe,KAAOA,EAAKf,EAAO6B,EAASC,SAC/DG,QAAQC,IAAI,eAAgBL,EAASC,MACrCG,QAAQC,IAAI,WAAYb,MAEzBU,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAmBgB/B,CAAiBD,EAAKe,MAFzCf,EAAKe,SAMhB,uBAAMyB,SA7DM,SAACC,GACfA,EAAMC,iBACNT,QAAQC,IAAI,iBAAkBO,EAAME,QACpC,IAAMC,EAAa,CACjBxC,QAASmB,EACTsB,MAAM,IAAIC,MAAOC,cACjB5C,UAAW6C,KAAKC,SAAW,IAE7B1C,EACGI,OAAOiC,GACPhB,MAAK,SAACC,GACLP,EAASD,EAAM6B,OAAOrB,EAASC,OAC/BN,EAAW,OAEZO,OAAM,SAACC,GACNC,QAAQC,IAAIF,OA8Cd,UACE,uBAAOmB,MAAO5B,EAAS6B,SA3CJ,SAACX,GACxBR,QAAQC,IAAI,WAAYO,EAAME,OAAOQ,OACrC3B,EAAWiB,EAAME,OAAOQ,UA0CpB,wBAAQE,KAAK,SAAb,yBChFRC,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.53498066.chunk.js","sourcesContent":["import React from \"react\";\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important ? \"make not important\" : \"make important\";\n\n  return (\n    <li>\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  );\n};\n\nexport default Note;\n","import axios from \"axios\";\n\nconst baseUrl = \"/api/notes\";\n\nconst getAll = () => {\n  return axios.get(baseUrl);\n};\n\nconst create = (newObject) => {\n  return axios.post(baseUrl, newObject);\n};\n\nconst update = (id, newObject) => {\n  return axios.put(`${baseUrl}/${id}`, newObject);\n};\n\nconst remove = (id) => {\n  return axios.delete(`${baseUrl}/${id}`);\n};\n\nconst noteService = { getAll, create, update, remove };\nexport default noteService;\n","import React, { useState, useEffect } from \"react\";\nimport Note from \"./components/Note\";\nimport noteService from \"./services/notes\";\n\nconst App = () => {\n  const [notes, setNotes] = useState([]);\n  const [newNote, setNewNote] = useState(\"a new note...\");\n  const [showAll, setShowAll] = useState(true);\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then((response) => {\n        setNotes(response.data);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  }, []);\n\n  const addNote = (event) => {\n    event.preventDefault();\n    console.log(\"button clicked\", event.target);\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n    };\n    noteService\n      .create(noteObject)\n      .then((response) => {\n        setNotes(notes.concat(response.data));\n        setNewNote(\"\");\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const handleNoteChange = (event) => {\n    console.log(\"new note\", event.target.value);\n    setNewNote(event.target.value);\n  };\n\n  const toggleImportance = (id) => {\n    console.log(\"make\", notes);\n    const note = notes.find((note) => note.id === id);\n    console.log(\"note\", note);\n    const changedNote = { ...note, important: !note.important };\n    console.log(\"changedNote\", changedNote);\n    noteService\n      .update(id, changedNote)\n      .then((response) => {\n        setNotes(notes.map((note) => (note.id !== id ? note : response.data)));\n        console.log(\"respinsedata\", response.data);\n        console.log(\"newNotes\", notes);\n      })\n      .catch((error) => {\n        console.log(error);\n      });\n  };\n\n  const notesToShow = showAll ? notes : notes.filter((note) => note.important);\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? \"important\" : \"all\"}\n        </button>\n      </div>\n      <ul>\n        {notesToShow.map((note) => (\n          <Note\n            key={note.id}\n            note={note}\n            toggleImportance={() => toggleImportance(note.id)}\n          />\n        ))}\n      </ul>\n      <form onSubmit={addNote}>\n        <input value={newNote} onChange={handleNoteChange} />\n        <button type=\"submit\">save</button>\n      </form>\n    </div>\n  );\n};\n\nexport default App;\n","import ReactDOM from \"react-dom\";\nimport App from \"./App.js\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}